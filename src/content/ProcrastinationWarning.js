 export function ProcrastinationWarning( removeInfowarning, timer, browser, resolve, url ) { "use strict"; function t() {} function n(t) { return t(); } function e() { return Object.create(null); } function o(t) { t.forEach(n); } function i(t) { return "function" == typeof t; } function r(t, n) { return t != t ? n == n : t !== n || (t && "object" == typeof t) || "function" == typeof t; } function a(t, n) { t.appendChild(n); } function s(t) { t.parentNode.removeChild(t); } function l(t) { return document.createElement(t); } function f(t) { return document.createTextNode(t); } function c() { return f(" "); } function p(t, n, e) { null == e ? t.removeAttribute(n) : t.getAttribute(n) !== e && t.setAttribute(n, e); } function u(t, n, e, o) { t.style.setProperty(n, e, o ? "important" : ""); } let d; function m(t) { d = t; } const g = [], x = [], h = [], b = [], y = Promise.resolve(); let $ = !1; function v(t) { h.push(t); } let w = !1; const k = new Set(); function _() { if (!w) { w = !0; do { for (let t = 0; t < g.length; t += 1) { const n = g[t]; m(n), z(n.$$); } for (m(null), g.length = 0; x.length; ) x.pop()(); for (let t = 0; t < h.length; t += 1) { const n = h[t]; k.has(n) || (k.add(n), n()); } h.length = 0; } while (g.length); for (; b.length; ) b.pop()(); ($ = !1), (w = !1), k.clear(); } } function z(t) { if (null !== t.fragment) { t.update(), o(t.before_update); const n = t.dirty; (t.dirty = [-1]), t.fragment && t.fragment.p(t.ctx, n), t.after_update.forEach(v); } } const E = new Set(); function L(t, n) { -1 === t.$$.dirty[0] && (g.push(t), $ || (($ = !0), y.then(_)), t.$$.dirty.fill(0)), (t.$$.dirty[(n / 31) | 0] |= 1 << n % 31); } function A(r, a, l, f, c, p, u = [-1]) { const g = d; m(r); const x = (r.$$ = { fragment: null, ctx: null, props: p, update: t, not_equal: c, bound: e(), on_mount: [], on_destroy: [], on_disconnect: [], before_update: [], after_update: [], context: new Map(g ? g.$$.context : a.context || []), callbacks: e(), dirty: u, skip_bound: !1, }); let h = !1; if ( ((x.ctx = l ? l(r, a.props || {}, (t, n, ...e) => { const o = e.length ? e[0] : n; return ( x.ctx && c(x.ctx[t], (x.ctx[t] = o)) && (!x.skip_bound && x.bound[t] && x.bound[t](o), h && L(r, t)), n ); }) : []), x.update(), (h = !0), o(x.before_update), (x.fragment = !!f && f(x.ctx)), a.target) ) { if (a.hydrate) { const t = (function (t) { return Array.from(t.childNodes); })(a.target); x.fragment && x.fragment.l(t), t.forEach(s); } else x.fragment && x.fragment.c(); a.intro && (b = r.$$.fragment) && b.i && (E.delete(b), b.i(y)), (function (t, e, r, a) { const { fragment: s, on_mount: l, on_destroy: f, after_update: c, } = t.$$; s && s.m(e, r), a || v(() => { const e = l.map(n).filter(i); f ? f.push(...e) : o(e), (t.$$.on_mount = []); }), c.forEach(v); })(r, a.target, a.anchor, a.customElement), _(); } var b, y; m(g); } function I(n) { let e, o, r, d, m, g, x, h, b, y, $; return { c() { (e = l("div")), (o = l("div")), (r = l("div")), (r.innerHTML = '<img class="aiki-img" src=' + browser.runtime.getURL("images/AikiLogo.png") + ' alt="Aiki Logo" style="display: flex !important;\n        height: 1.2em !important;\n        padding: 5px !important;"/> \n      <h1 class="aiki-h1" style="font-size: 16px !important;\n      font-family: &#39;Roboto&#39;, sans-serif !important;\n      color: #ffffff !important;\n      text-align: center !important;\n      padding: 5px 0px !important;\n      margin: 0 !important;">Time&#39;s up!</h1>'), (d = c()), (m = l("div")), (g = l("h2")), (x = f(n[1])), (h = c()), (b = l("button")), (b.innerHTML = '<p class="aiki-p" style="display: flex !important;\n        font-family: &#39;Lato&#39;, sans-serif !important;\n        font-weight: bold !important;\n        font-size: 16px !important;\n        text-align: center !important;\n        margin: 0 !important;\n        color: #ffffff !important;">Snooze</p> \n        <small class="aiki-small" style="font-family: &#39;Lato&#39;, sans-serif !important;\n        font-weight: normal !important;\n        display: flex !important;\n        font-size: 12px !important;\n        padding-bottom: 5px !important;\n        text-align: center !important;\n        margin: 0 !important;\n        color: #ffffff !important;">(+1 minute)</small>'), p(r, "class", "aiki-header-wrapper"), u(r, "display", "flex", 1), u(r, "flex-direction", "row", 1), u(r, "width", "100%", 1), u(r, "justify-content", "center", 1), u(r, "background-color", "#282c34", 1), u(r, "border-radius", "15px 15px 0px 0px", 1), u(r, "border", "2px solid #282c34", 1), u(r, "padding", "3px 0px", 1), p(g, "class", "aiki-h2"), u(g, "font-size", "20px", 1), u(g, "font-family", "'Roboto', sans-serif", 1), u(g, "color", "#212121", 1), u(g, "text-align", "center", 1), u(g, "padding", "10px 0px", 1), u(g, "margin", "0", 1), p(b, "class", "aiki-button svelte-olfdf2"), u(b, "display", "flex", 1), u(b, "flex-direction", "column", 1), u(b, "align-self", "center", 1), u(b, "align-items", "center", 1), u(b, "width", "90%", 1), u(b, "font-family", "'Roboto', sans-serif"), u(b, "color", "#ffffff", 1), u(b, "background-color", "#007bff", 1), u(b, "border-color", "#007bff", 1), u(b, "transition-duration", "0.4s", 1), u(b, "font-weight", "400", 1), u(b, "text-align", "center", 1), u(b, "white-space", "nowrap", 1), u(b, "vertical-align", "middle", 1), u(b, "-ms-touch-action", "manipulation", 1), u(b, "touch-action", "manipulation", 1), u(b, "cursor", "pointer", 1), u(b, "background-image", "none", 1), u(b, "padding", "6px 12px", 1), u(b, "font-size", "14px", 1), u(b, "line-height", "1.42857143", 1), u(b, "border-radius", "4px", 1), u(b, "-webkit-user-select", "none", 1), u(b, "-moz-user-select", "none", 1), u(b, "-ms-user-select", "none", 1), u(b, "user-select", "none", 1), p(m, "class", "aiki-content-wrapper"), u(m, "border-radius", "0px 0px 15px 15px", 1), u(m, "background-color", "#ffffff", 1), u(m, "box-shadow", "2px 2px 2px rgba(0, 0, 0, 0.3)", 1), u(m, "width", "100%", 1), u(m, "display", "flex", 1), u(m, "flex-direction", "column", 1), u(m, "justify-content", "center", 1), u(m, "align-content", "center", 1), u(m, "text-align", "center", 1), u(m, "border-radius", "0px 0px 15px 15px", 1), u(m, "border", "2px solid #aaaaaa", 1), p(o, "class", "aiki-wrapper"), u(o, "display", "flex", 1), u(o, "flex-direction", "column", 1), u(o, "width", "10vw", 1), u(o, "height", "10vh", 1), u(o, "position", "fixed", 1), u(o, "top", "40%", 1), u(o, "left", "45%", 1), p(e, "class", "aiki-overlay"), u(e, "top", "0", 1), u(e, "left", "0", 1), u(e, "height", "100%", 1), u(e, "width", "100%", 1), u(e, "background-color", "rgba(128, 128, 128, 0.281)", 1), u(e, "position", "fixed", 1), u(e, "z-index", "9001", 1); }, m(t, s) { var l, f, c, p; !(function (t, n, e) { t.insertBefore(n, e || null); })(t, e, s), a(e, o), a(o, r), a(o, d), a(o, m), a(m, g), a(g, x), a(m, h), a(m, b), y ||   ((f = "click"),   (c = function () {     i(n[0]) && n[0].apply(this, arguments);   }),   (l = b).addEventListener(f, c, p),   ($ = () => l.removeEventListener(f, c, p)),   (y = !0)); }, p(t, [e]) { (n = t), 2 & e &&   (function (t, n) {     (n = "" + n), t.wholeText !== n && (t.data = n);   })(x, n[1]); }, i: t, o: t, d(t) { t && s(e), (y = !1), $(); }, }; } function j(t, n, e) { let { resolve: o } = n, { removeInfowarning: i } = n, { timer: r } = n, { url: a } = n, s = Math.round(r.time / 1e3); return ( setInterval(() => { e(1, (s = Math.round(r.time / 1e3))); }, 100), r.start(o, a), (t.$$set = (t) => { "resolve" in t && e(2, (o = t.resolve)), "removeInfowarning" in t && e(0, (i = t.removeInfowarning)), "timer" in t && e(3, (r = t.timer)), "url" in t && e(4, (a = t.url)); }), [i, s, o, r, a] ); } return new (class extends class { $destroy() { !(function (t, n) { const e = t.$$; null !== e.fragment && (o(e.on_destroy), e.fragment && e.fragment.d(n), (e.on_destroy = e.fragment = null), (e.ctx = [])); })(this, 1), (this.$destroy = t); } $on(t, n) { const e = this.$$.callbacks[t] || (this.$$.callbacks[t] = []); return ( e.push(n), () => { const t = e.indexOf(n); -1 !== t && e.splice(t, 1); } ); } $set(t) { var n; this.$$set && ((n = t), 0 !== Object.keys(n).length) && ((this.$$.skip_bound = !0), this.$$set(t), (this.$$.skip_bound = !1)); } } { constructor(t) { super(), A(this, t, j, I, r, { resolve: 2, removeInfowarning: 0, timer: 3, url: 4, }); } })({ target: document.body, props: { removeInfowarning: removeInfowarning, timer: timer, resolve: resolve, url: url, }, }); } //# sourceMappingURL=bundle.js.map 